<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Samuel Langton</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 01 Jul 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu347c2c227070d4d829f6f2e71f22c263_2514_512x512_fill_lanczos_center_2.png</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Tutorial: visualising lockdown crime trends</title>
      <link>/post/tutorial1_crime_covid/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/tutorial1_crime_covid/</guid>
      <description>


&lt;p&gt;Over the past few weeks I have spent a bit of time exploring police recorded crime trends before and after nationwide lockdowns induced by the COVID19 pandemic. Some of this has involved making &lt;a href=&#34;https://theconversation.com/lockdown-crime-trends-why-antisocial-behaviour-is-up-140479&#34;&gt;descriptive graphics&lt;/a&gt; across different crime types, using London (UK) as a case study.&lt;/p&gt;
&lt;p&gt;In this post, I will take you through how you can create these visuals in &lt;code&gt;R&lt;/code&gt;. It’s worth emphasising that this is simply a demonstration of ‘how I get did’ not ‘how to do it’ – there will be many ways of doing the same thing, some probably more beautiful and concise.&lt;/p&gt;
&lt;div id=&#34;background&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;There has been talk of lockdowns representing the &lt;a href=&#34;https://link.springer.com/article/10.1007/s12103-020-09546-0&#34;&gt;largest natural experiment in criminological history&lt;/a&gt;. Of course, this kind of claim will be challenged, especially when demonstrations involve police recorded crime data. Lots of parameters will have changed beyond people’s routine activities, amongst them, people’s ability and willingness to report crimes to the police, and policing resource allocation. It might be some time before we can fully understand how lockdowns have curbed the spatial and temporal patterns of crime.&lt;/p&gt;
&lt;p&gt;In the meantime, police recorded crime data can offer a unique insight into how criminal behaviour &lt;em&gt;might&lt;/em&gt; have changed in the past few months. In the UK, open data is released on a monthly basis. This &lt;a href=&#34;https://the-sra.org.uk/SRA/Blog/whyyoucantidentifychangesincrimebycomparingthismonthtolastmonth.aspx&#34;&gt;isn’t ideal&lt;/a&gt; by any means, but it does allow for some preliminary exploration. Here, we’re going to create a descriptive visualisation inspired by some infamous graphs by &lt;a href=&#34;https://www.ft.com/content/a26fbf7e-48f8-11ea-aeb3-955839e06441&#34;&gt;the FT&lt;/a&gt; used to track COVID19 deaths.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/ft_example.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;One powerful thing about these visuals is that they effortlessly account for &lt;em&gt;seasonal&lt;/em&gt; trends in death rates using previous years as a reference point. Readers can then intuitively understand what is ‘normal’, and identify fluctuations which are irregular, and thus likely a result of COVID19.&lt;/p&gt;
&lt;p&gt;Similarly, a key characteristic of long-term crime trends is seasonality. To disentangle fluctuations in crime, and pinpoint irregularity resulting from lockdown measures, we must account for typical monthly fluctuations. We can do this descriptively (and visually) using open police recorded crime data and some packages in &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For now, we will focus on the base visual – perhaps in further posts I can demonstrate how to more accurately mimic the ‘FT look’. We’ll aim for something like the graphic below, representing multiple crime type trends in London from January 2016 to May 2020.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/full_met.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;project-and-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Project and packages&lt;/h2&gt;
&lt;p&gt;To make following this tutorial easier, some of you might want to download the associated repository on GitHub. By working within the R project on the repository, and using the same folder structure, the subsequent code won’t need to be edited. Any data we download should just be placed into the &lt;strong&gt;data&lt;/strong&gt; folder, and named accordingly. Whatever works for you!&lt;/p&gt;
&lt;p&gt;Although we are mainly using &lt;code&gt;ggplot2&lt;/code&gt; for the visual, we use a number of other packages for data wrangling and plot arrangement. Load them using &lt;code&gt;library()&lt;/code&gt; now. If you don’t have some of these packages, ensure they are installed using &lt;code&gt;install.packages()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(stringr)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;open-crime-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Open crime data&lt;/h2&gt;
&lt;p&gt;First, we need the data. There are several ways to download &lt;a href=&#34;https://data.police.uk/&#34;&gt;open police data&lt;/a&gt; in the UK. There is an &lt;a href=&#34;https://data.police.uk/docs/&#34;&gt;API&lt;/a&gt;, an &lt;a href=&#34;https://github.com/njtierney/ukpolice&#34;&gt;R package&lt;/a&gt;, and a &lt;a href=&#34;https://data.police.uk/data/&#34;&gt;direct download page&lt;/a&gt; from the website.&lt;/p&gt;
&lt;p&gt;Here, we are going to get most of the data through direct download from the &lt;a href=&#34;https://data.police.uk/data/&#34;&gt;online data portal&lt;/a&gt;. Remembering that we want previous years as our reference point, we are going to select the widest date range possible (at the time of writing), which is the 36 months spanning from June 2017 to May 2020. As new data is released, this 36-month window will shift. So for example, once June 2020 becomes available, you will only be able to download July 2017 to June 2020. This isn’t a huge deal, but remember to take that into account when following subsequent steps.&lt;/p&gt;
&lt;p&gt;You can select the latest 36-month range using the dropdown menus, and then tick whatever police force(s) we want. In this example, I am going to use the Metropolitan Police Service, which serve Greater London. So, our selection will look something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/dates_met.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can then ‘Generate file’ at the bottom of the page, and on the next page, download a .zip file containing all our crime data for the past 36 months. Here, I call the .zip file &lt;strong&gt;met_police_june2017_to_june2020&lt;/strong&gt; and save it to a local folder named &lt;strong&gt;data&lt;/strong&gt;, as per the associated GitHub repository.&lt;/p&gt;
&lt;p&gt;Ideally, I’d like to go even further back, before June 2017, to get the best picture possible about seasonal crime trends. We can do this using the open &lt;a href=&#34;https://data.police.uk/data/archive/&#34;&gt;archive&lt;/a&gt; data. This comes in a pretty unfriendly format, because you cannot download by force, and cannot select specific time periods. Anyway, you can download all the data prior to June 2017 using a direct download from the &lt;a href=&#34;https://data.police.uk/data/archive/&#34;&gt;archive page&lt;/a&gt; and the following option:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/archive.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Remember that if your 36-month window is more recent than this demonstration, you will need to select a different corresponding archive folder! I name mine &lt;strong&gt;archive_to_jun_2017&lt;/strong&gt; and save it in the same &lt;strong&gt;data&lt;/strong&gt; folder. Note that this might take 5-10 minutes to download, depending on your internet connection. Once unzipped, you should have two folders in your &lt;strong&gt;data&lt;/strong&gt; folder, named accordingly. Mine look like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/file_names.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;loading-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Loading the data&lt;/h2&gt;
&lt;p&gt;You will notice that, once unzipped, data for the last 36 months (named &lt;strong&gt;met_police_june2017_to_june2020&lt;/strong&gt;) is spread across multiple folders – one for each month. This is not ideal, but using some tricks in &lt;code&gt;R&lt;/code&gt; we can automatically load these files and bind them together into one data frame.&lt;/p&gt;
&lt;p&gt;First, let’s generate a list containing all the working directories and .csv files in the downloaded folder. Note that we are taking the location and name of the folder relative to where our R project is saved (&lt;code&gt;&#34;data/met_police_june2017_to_june2020/&#34;&lt;/code&gt;), extracting the name of every .csv file contained within it, and pasting them together.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Extract list of working directories + file names for each csv.
file_names &amp;lt;- paste(&amp;quot;data/met_police_june2017_to_june2020/&amp;quot;, list.files(&amp;quot;data/met_police_june2017_to_june2020&amp;quot;, &amp;quot;*.csv&amp;quot;, recursive=TRUE), sep = &amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Printing the object &lt;code&gt;file_names&lt;/code&gt; to your Console will provide you with the working directory and file name of the .csv files – of which there are 36 – contained within &lt;strong&gt;met_police_june2017_to_june2020&lt;/strong&gt;. We can then load all of these .csv files into &lt;code&gt;R&lt;/code&gt; by looping the &lt;code&gt;read_csv()&lt;/code&gt; function from &lt;code&gt;readr&lt;/code&gt; through the &lt;code&gt;file_names&lt;/code&gt; object.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Loop through each to load.
met_list &amp;lt;- lapply(file_names, read_csv)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Okay, we are nearly there. We can complete the missing months for 2017 using the archive material. Again, remember that you might need additional months depending on the 36-month time window you’re using. Here, we only need January to May, so rather than use another loop, let’s just load them individually, assigning them to meaningful object names.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;jan17_df &amp;lt;- read_csv(&amp;quot;data/archive_to_jun_2017/2017-01/2017-01-metropolitan-street.csv&amp;quot;)
feb17_df &amp;lt;- read_csv(&amp;quot;data/archive_to_jun_2017/2017-02/2017-02-metropolitan-street.csv&amp;quot;) 
mar17_df &amp;lt;- read_csv(&amp;quot;data/archive_to_jun_2017/2017-03/2017-03-metropolitan-street.csv&amp;quot;) 
apr17_df &amp;lt;- read_csv(&amp;quot;data/archive_to_jun_2017/2017-04/2017-04-metropolitan-street.csv&amp;quot;) 
may17_df &amp;lt;- read_csv(&amp;quot;data/archive_to_jun_2017/2017-05/2017-05-metropolitan-street.csv&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally (the interesting bit is coming, I promise), let’s extract the monthly data for 2016 from the archive data, so we have the complete set from 2016-2020. We do this like the first example, but with a few extra options to ensure that we select data from the Metropolitan Police only, rather than every police force. Remember that the archive data automatically contains data from every police force – but we only want the Met.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Extract 2016 for the Met only.
dates_2016 &amp;lt;- list.files(&amp;quot;data/archive_to_jun_2017&amp;quot;, pattern = &amp;quot;2016&amp;quot;)
extra &amp;lt;- paste(&amp;quot;data/archive_to_jun_2017&amp;quot;, &amp;quot;/&amp;quot;, dates_2016, &amp;quot;/&amp;quot;, dates_2016, &amp;quot;-&amp;quot;, &amp;quot;metropolitan-street.csv&amp;quot;, sep = &amp;quot;&amp;quot;)

# Load in loop.
met_2016_list &amp;lt;- lapply(extra, read_csv)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, at last, we can bind all these data together row-wise using &lt;code&gt;bind_rows()&lt;/code&gt;. The resulting object &lt;code&gt;met_full_df&lt;/code&gt; contains all records for the Metropolitan Police from Janury 2016 to May 2020. Okay, it’s been a bit of palavar, but we have managed to download and compile over 4.5 million crime records with (relative) ease. Hurrah!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Bind these to existing data frame objects.
met_full_df &amp;lt;- bind_rows(met_2016_list, jan17_df, feb17_df, mar17_df, apr17_df, may17_df, met_recent_df)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visual-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visual plot&lt;/h2&gt;
&lt;p&gt;What we have currently are individual records of crime recorded by the Met from January 2016 to May 2020. We can aggregate these records by month, year and crime type using a series of functions in &lt;code&gt;dplyr&lt;/code&gt; along with the piping operator &lt;code&gt;%&amp;gt;%&lt;/code&gt;. Note the steps taken. We first filter out ‘other crimes’ – a crude decision simply because I don’t think this crime type offers much insight. We then create separate month and year variables, group by months, years and crime type, count the number of crimes for each combination, arrange for easy viewing, and then ungroup. The final step splits the data frame into a list of data frames by each crime type, so we can easily generate a plot for each crime type later.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Counts.
met_stats_df &amp;lt;- met_full_df %&amp;gt;%                             # select the data frame
  filter(`Crime type` != &amp;quot;Other crime&amp;quot;)                     # filter out other crimes
  separate(Month, into = c(&amp;quot;Year&amp;quot;,&amp;quot;Month&amp;quot;), sep = &amp;quot;-&amp;quot;) %&amp;gt;%  # create new &amp;#39;month&amp;#39; and &amp;#39;year&amp;#39; variables
  group_by(Year, Month, `Crime type`) %&amp;gt;%                   # group by year, month and crime type
  summarise(counts = n()) %&amp;gt;%                               # count rows per group combination
  arrange(`Crime type`, Year, Month) %&amp;gt;%                    # sort data frame for viewing with View()
  ungroup() %&amp;gt;%                                             # ungroup data frame
  split_group(`Crime type`)                                 # split into lists of df by crime type&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can then create the &lt;code&gt;ggplot&lt;/code&gt; function which will be used to generate the plots for each crime type.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Base visual function.
plot_fun &amp;lt;- function(x){
  ggplot() +
    geom_line(data = filter(x, Year != 2020),
              mapping = aes(x = Month, y = counts, group = Year),
              colour = &amp;quot;lightgrey&amp;quot;) +
    geom_vline(data = x,
               mapping = aes(xintercept = 2.7),
               linetype = &amp;quot;dotted&amp;quot;) + 
    stat_summary(data = filter(x, Year != 2020),
                 aes(x = Month, y = counts, group = Year),
                 fun = mean, colour = &amp;quot;white&amp;quot;, geom = &amp;quot;line&amp;quot;, group=1, size = 0.8) +
    stat_summary(data = filter(x, Year != 2020),
                 aes(x = Month, y = counts, group = Year),
                 fun = mean, colour = &amp;quot;black&amp;quot;, geom = &amp;quot;line&amp;quot;, group=1, size = 0.7) +
    geom_line(data = filter(x, Year == 2020),
              mapping = aes(x = Month, y = counts, group = 1),
              colour = &amp;quot;white&amp;quot;, size = 1.1) +
    geom_line(data = filter(x, Year == 2020),
              mapping = aes(x = Month, y = counts, group = 1),
              colour = &amp;quot;tomato&amp;quot;, size = 1) +
    scale_x_discrete(labels = c(&amp;quot; &amp;quot;,&amp;quot;Feb&amp;quot;,&amp;quot;Mar&amp;quot;,&amp;quot;Apr&amp;quot;,&amp;quot;May&amp;quot;,&amp;quot;Jun&amp;quot;,&amp;quot;Jul&amp;quot;,&amp;quot;Aug&amp;quot;,&amp;quot;Sep&amp;quot;,&amp;quot;Oct&amp;quot;,&amp;quot;Nov&amp;quot;,&amp;quot;Dec&amp;quot;)) +
    scale_y_continuous(limits = c(0.6*min(x$counts), 1.4*max(x$counts))) +
    labs(x = NULL, y = NULL) +
    theme_bw() +
    theme(axis.title = element_blank(),
          axis.text.x = element_blank(),
          axis.text.y = element_text(size = 6),
          axis.ticks = element_blank(),
          plot.title = element_text(size = 8))  
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function can then be looped through &lt;code&gt;met_stats_list&lt;/code&gt;, the list of data frames by crime type. Note that we first name each data frame in the list so that we can add titles automatically. In doing so, we also remove the underscores. The resulting object &lt;code&gt;met_stats_plots&lt;/code&gt; is a list of ggplot objects, visualising crime trends for each crime type.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Create a character vector naming each crime type, which helps us automatically add titles to our plots.
names(met_stats_list) &amp;lt;- sort(unique(met_full_df$`Crime type`))

# Make plots and add titles.
met_stats_plots &amp;lt;- list()
for (i in seq(met_stats_list)) {
  gg &amp;lt;- plot_fun(met_stats_list[[i]]) +
    labs(title = str_replace_all(string = names(met_stats_list[i]), &amp;quot;_&amp;quot;, &amp;quot; &amp;quot;))
  met_stats_plots[[i]] &amp;lt;- gg
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can arrange the list of plots using the &lt;code&gt;plot_grid()&lt;/code&gt; function from &lt;code&gt;cowplot&lt;/code&gt; to get a basic summary of crime trends in London.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Plot grid.
plot_grid(plotlist = met_stats_plots, ncol = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/full_met_basic.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;annotating-and-arranging&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Annotating and arranging&lt;/h2&gt;
&lt;p&gt;The problem with the above graph is the lack of annotation. Rather than add a legend, we can simply annotate one of these plots. The starkest trend is probably anti-social behaviour, so let’s retrieve this plot from our list.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Pluck out ASB for annotation.
Anti_social_behaviour &amp;lt;- pluck(met_stats_plots, 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can then add arrows and text labels using &lt;code&gt;annotate()&lt;/code&gt;. This seems rather fiddly at first (because it is) but once you’re used to it, stating accurate x and y arguments is quite straightforward. Note that by specifying &lt;code&gt;axis.text.x&lt;/code&gt; we bring back the x-axis annotation we used in the original function, specifying the months.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Annotate.
asb &amp;lt;- Anti_social_behaviour +
  theme(axis.text.x = element_text(size = 6, angle = 90, vjust = -1.5)) +
  labs(title = &amp;quot;Anti-social behaviour&amp;quot;) +
  #2020 label
  annotate(geom = &amp;quot;curve&amp;quot; , x = 7, y = 73000, xend = 5, yend = 61000,
           curvature = 0.3, arrow = arrow(length = unit(1, &amp;quot;mm&amp;quot;))) +
  annotate(geom = &amp;quot;text&amp;quot;, x = 7.8, y = 73000, label = &amp;quot;2020&amp;quot;, fontface = &amp;quot;bold&amp;quot;, size = 3) +
  #lockdown label
  annotate(geom = &amp;quot;curve&amp;quot;, x = 4, y = 9000, xend = 2.8, yend = 9000,
           curvature = 0.1, arrow = arrow(length = unit(1, &amp;quot;mm&amp;quot;))) +
  annotate(geom = &amp;quot;text&amp;quot;, x = 5.5, y = 9000, label = &amp;quot;Lockdown&amp;quot;, fontface = &amp;quot;bold&amp;quot;, size = 3) +
  #recent years label
  annotate(geom = &amp;quot;curve&amp;quot;, x = 8, y = 38500, xend = 8.3, yend = 26000,
           curvature = -0.1, arrow = arrow(length = unit(1, &amp;quot;mm&amp;quot;))) +
  annotate(geom = &amp;quot;text&amp;quot;, x = 8, y = 43000, label = &amp;quot;Recent years (inc. mean)&amp;quot;, fontface = &amp;quot;bold&amp;quot;, size = 3) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we’ve made a separate (annotated) plot for anti-social behaviour, we can get rid of the one contained in our original list.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Remove ASB for plot list to avoid repeat.
met_stats_plots[[1]] &amp;lt;- NULL&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then comes the arranging. Here, I use the &lt;code&gt;plot_grid&lt;/code&gt; function from the amusingly named &lt;code&gt;cowplot&lt;/code&gt; package. Again, this is quite fiddly – an alternative might be &lt;a href=&#34;https://github.com/thomasp85/patchwork&#34;&gt;patchwork&lt;/a&gt;, but I am quite familiar with cowplot already. Note that we actually create two separate cowplots – one for anti-social behaviour, and one for our main plots – and then stick them together.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;asb_blank &amp;lt;- plot_grid(asb, NULL, nrow = 1)
all_plots &amp;lt;- plot_grid(plotlist = met_stats_plots, nrow = 4)
full_plot &amp;lt;- plot_grid(asb_blank, all_plots, nrow = 2, rel_heights = c(2,5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then print the plot to your &lt;strong&gt;Viewer&lt;/strong&gt; or save it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Save
ggsave(full_plot, filename = &amp;quot;visuals/full_met.png&amp;quot;, height = 8, width = 6)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/full_met.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Lockdown crime trends. What we know and what we don&#39;t</title>
      <link>/post/lockdown_conversation/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/lockdown_conversation/</guid>
      <description>


&lt;p&gt;Understanding what has happened to crime during lockdown is challenging. We are in uncharted territory and it’s proving hard to draw definitive conclusions from the latest police recorded crime data. But a few trends, like a spike in antisocial behaviour and an increase in drug offences, are beginning to emerge.&lt;/p&gt;
&lt;p&gt;Changes in people’s &lt;a href=&#34;https://www.gstatic.com/covid19/mobility/2020-05-29_GB_Mobility_Report_en-GB.pdf&#34;&gt;movements and activities&lt;/a&gt; can impact on the &lt;a href=&#34;https://theconversation.com/coronavirus-how-crime-changes-during-a-lockdown-134948&#34;&gt;opportunities&lt;/a&gt; available to potential offenders and, in turn, the volume and types of crime being committed. As a case study, we can look at &lt;a href=&#34;https://data.police.uk/data/&#34;&gt;Greater London&lt;/a&gt; and consider crimes recorded by the Metropolitan Police Service before and after the nationwide lockdown.&lt;/p&gt;
&lt;p&gt;Using this data, I have visualised how the Met recorded antisocial behaviour and different crime types on a month-by-month basis. Importantly, there is enough open data to compare trends across years. This is useful for studying crime because many offence types are seasonal.&lt;/p&gt;
&lt;p&gt;For instance, bicycle theft tends to increase in spring (around when the lockdown began) so looking at 2020 in isolation would be uninformative, or even misleading. This mimics the approach taken when &lt;a href=&#34;https://www.ft.com/content/a26fbf7e-48f8-11ea-aeb3-955839e06441&#34;&gt;visually tracking&lt;/a&gt; coronvirus fatalities due to the seasonality of death rates.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/met_grid_crimetypes_less_ticks.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Crimes such as burglary, shoplifting, robbery and theft all experienced remarkably sudden declines during April in comparison to previous years. Although we cannot differentiate individual days and weeks, some of these declines were already evident in March.&lt;/p&gt;
&lt;p&gt;This aligns with what many will have expected. With most people spending so much time at home, shopping limited to essentials, and movement restricted to necessary travel and exercise, the opportunities available to commit such offences were severely curtailed.&lt;/p&gt;
&lt;div id=&#34;anti-social-behaviour&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Anti-social behaviour&lt;/h2&gt;
&lt;p&gt;One of the starkest trends observed is antisocial behaviour. Even by the end of March, recorded incidences were unusually high. But between March and April, the number of cases skyrocketed by over 270%. An increase at this time of year is expected, but a rise of this magnitude is unprecedented.&lt;/p&gt;
&lt;p&gt;It is plausible that the lockdown resulted in a genuine shift in “traditional” antisocial behaviour, such as nuisance noise from neighbours. But the National Police Chiefs’ Council has said that this increase can largely be attributed to people &lt;a href=&#34;https://www.bbc.co.uk/news/uk-52298016&#34;&gt;breaching lockdown guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The picture is not so clear for criminal offences. There has not yet been any discernible impact on public order or the possession of weapons. Violence and sexual offences appear to have declined more steeply than usual.&lt;/p&gt;
&lt;p&gt;However, using these charts in isolation, it is difficult to definitively attribute these changes to the lockdown. Even during less remarkable times, police recorded crime patterns can be subject to &lt;a href=&#34;https://the-sra.org.uk/SRA/Blog/whyyoucantidentifychangesincrimebycomparingthismonthtolastmonth.aspx&#34;&gt;short-term blips&lt;/a&gt;. Indeed, visualising the long-term trend for violence and sexual offences demonstrates that similarly volatile changes have occurred before.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/viole_lines_lessticks.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Drug offences appear to have gone up in comparison to previous years. Addiction experts have speculated that the lockdown could result in an &lt;a href=&#34;https://www.theguardian.com/society/2020/may/03/coronavirus-crisis-could-increase-users-drug-habits-report&#34;&gt;increase in drug usage&lt;/a&gt; among recreational users. At the same time, &lt;a href=&#34;https://www.bbc.co.uk/news/uk-england-sussex-52344249&#34;&gt;some police forces&lt;/a&gt; have suggested that the demand for drugs has remained the same, but that drug dealers now stick out on otherwise empty streets, increasing the number of arrests.&lt;/p&gt;
&lt;p&gt;In other words, these changes may not necessarily reflect actual changes in criminal behaviour. The long-term picture, visualised below, demonstrates that April’s increase might also be part of a wider upward trend in Greater London. The rise in recent years might be partly attributable to action taken over &lt;a href=&#34;https://www.bbc.co.uk/news/uk-england-norfolk-52892907&#34;&gt;county lines&lt;/a&gt; drug networks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/drugs_lines_lessticks.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;exercising-caution&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exercising caution&lt;/h2&gt;
&lt;p&gt;Some have labelled the nationwide lockdown as an ideal natural experiment to study how a shift in the opportunities available to offenders might impact on crime. But of course, it is &lt;a href=&#34;https://www.kcl.ac.uk/news/no-the-coronavirus-crisis-isnt-a-cool-natural-experiment&#34;&gt;not that simple&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Numerous parameters have changed. Recording practices for lockdown breaches have had to be adapted overnight. The willingness and ability of people to report crimes to the police, particularly for domestic offences, will have changed in ways that cannot yet be quantified. Calls to a national &lt;a href=&#34;https://theconversation.com/coronavirus-murders-media-narrative-about-domestic-abuse-during-lockdown-is-wrong-and-harmful-137011&#34;&gt;domestic abuse&lt;/a&gt; helpline have &lt;a href=&#34;https://www.bbc.co.uk/news/uk-52433520&#34;&gt;increased&lt;/a&gt;, but open police records do not flag which violent and sexual offences, for instance, were domestic.&lt;/p&gt;
&lt;p&gt;Policing priorities have also had to be adjusted in response to vague government guidelines and there has been considerable &lt;a href=&#34;https://www.polfed.org/gmp/news/2019/gmp-federation-chairman-stu-berry-reacts-to-the-latest-government-announcements-on-covid-19/&#34;&gt;strain&lt;/a&gt; on officers as a result.&lt;/p&gt;
&lt;p&gt;One way of overcoming shortcomings in police data is by using victimisation surveys such as the &lt;a href=&#34;https://www.ons.gov.uk/surveys/informationforhouseholdsandindividuals/householdandindividualsurveys/crimesurveyforenglandandwales&#34;&gt;Crime Survey for England and Wales&lt;/a&gt; that can capture crimes not reported or identified by the police. This largely resolves issues around under-reporting and includes additional crime types such as cybercrime which might &lt;a href=&#34;http://blog.policy.manchester.ac.uk/digital-futures/2020/03/profiting-from-pandemics-covid-19-changing-routines-and-cyber-crimes/&#34;&gt;have increased&lt;/a&gt; during the lockdown. However, the survey data is not month-by-month and will not be released for some time.&lt;/p&gt;
&lt;p&gt;For now, open data in the UK represents a unique opportunity to track police recorded crime – as long as it is used with a degree of caution.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Even the most beautiful maps can be misleading</title>
      <link>/post/maps_conversation/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/maps_conversation/</guid>
      <description>


&lt;p&gt;From reporting &lt;a href=&#34;https://www.bbc.co.uk/news/election/2017/results&#34;&gt;election results&lt;/a&gt; to issuing &lt;a href=&#34;https://www.bbc.co.uk/weather/2643743&#34;&gt;weather forecasts&lt;/a&gt;, maps offer a powerful, accessible and visually appealing way to convey complex information. Yet even the most beautiful maps can introduce some degree of misrepresentation.&lt;/p&gt;
&lt;p&gt;To see how, consider the latest statistics on deprivation released by the UK government. The government ranked 32,844 neighbourhoods, based on measures of deprivation such as income, employment, health and crime. The figures were widely reported, from &lt;a href=&#34;https://www.bbc.co.uk/news/uk-england-49812519&#34;&gt;the BBC&lt;/a&gt; to &lt;a href=&#34;https://www.theguardian.com/society/2019/sep/26/wealthy-incomers-changing-profile-of-londons-most-deprived-areas&#34;&gt;The Guardian&lt;/a&gt; and the &lt;a href=&#34;https://www.dailymail.co.uk/news/article-7507575/Essex-seaside-village-Jaywick-named-Englands-deprived-neighbourhood.html&#34;&gt;Daily Mail&lt;/a&gt;, reigniting long-standing debates about persistent inequality in England.&lt;/p&gt;
&lt;p&gt;Of course, many outlets &lt;a href=&#34;https://imd2019.group.shef.ac.uk/&#34;&gt;used maps&lt;/a&gt; to share these findings with the public. But using traditional boundaries can divert readers’ attention away from important information. In &lt;a href=&#34;https://www.bbc.co.uk/news/uk-england-49812519&#34;&gt;BBC’s&lt;/a&gt; map of deprivation across local authorities, for instance, sparsely populated rural areas dominate a disproportionately large area, while urban areas, such as London, containing millions of people, are rendered almost invisible.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The map included in the BBC’s report on deprivation is interesting. It would be good to take a look at the Ofsted rating of schools in the most deprived areas... &lt;a href=&#34;https://t.co/iUR2hINBRn&#34;&gt;https://t.co/iUR2hINBRn&lt;/a&gt; &lt;a href=&#34;https://t.co/lFq6s8l1In&#34;&gt;pic.twitter.com/lFq6s8l1In&lt;/a&gt;&lt;/p&gt;&amp;mdash; SailingAway (@Heatherleatt) &lt;a href=&#34;https://twitter.com/Heatherleatt/status/1177466763312689152?ref_src=twsrc%5Etfw&#34;&gt;September 27, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;distorted-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Distorted data&lt;/h2&gt;
&lt;p&gt;Recent &lt;a href=&#34;https://osf.io/preprints/socarxiv/t6agd/&#34;&gt;research shows&lt;/a&gt; that people can interpret information inaccurately, when they look at maps with these shortcomings. But other techniques can be used to create a more accurate impression of the underlying data. For instance, &lt;a href=&#34;https://www.tandfonline.com/doi/full/10.1111/j.1467-8306.2004.09401004.x?casa_token=PCQuJ1wUlkoAAAAA:m8aWeOyHWcKv-iL8T1-bXlcunBnzZV2lkAz3-gYAxUtgRCihbAYOIWz8-HJFvSOO8WP4W25tLA&#34;&gt;cartograms&lt;/a&gt; deliberately distort geography by scaling areas according to a specific variable, such as local population.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.arcgis.com/home/item.html?id=b686a7679cb747e9825d1d1bb6b26046&#34;&gt;Dorling cartograms&lt;/a&gt; take this one step further, scaling areas according to a specified variable, but also representing each area using the same shape, such as a square or a circle. Other methods achieve uniformity in both size and shape: &lt;a href=&#34;http://gisruk.org/ProceedingsGISRUK2018/GISRUK2018_Contribution_023.pdf&#34;&gt;hexograms&lt;/a&gt; and &lt;a href=&#34;https://github.com/jbaileyh/geogrid&#34;&gt;geogrids&lt;/a&gt; transform the original boundaries of the map into hexagons or squares of the same size, while still aiming to preserve their original arrangement.&lt;/p&gt;
&lt;p&gt;Mapping neighbourhood deprivation in England represents &lt;a href=&#34;https://theconversation.com/these-maps-show-how-tricky-it-is-to-measure-inequality-in-local-areas-across-england-109143&#34;&gt;a significant challenge&lt;/a&gt;, even for experts. This is because the government defines a neighbourhood as a &lt;a href=&#34;https://www.ons.gov.uk/methodology/geography/ukgeographies/censusgeography&#34;&gt;“lower super output area”&lt;/a&gt; – each of which contains around 1,500 residents.&lt;/p&gt;
&lt;p&gt;Because highly deprived neighbourhoods tend to be densely populated, they are less visible on a regular map. By contrast, wealthier suburban areas – which are often less densely populated and therefore much larger – dominate the map. So there’s a risk that readers might draw inaccurate conclusions about the level of deprivation in any given area.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;shaping-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Shaping up&lt;/h2&gt;
&lt;p&gt;Using &lt;a href=&#34;https://www.arcgis.com/home/item.html?id=b686a7679cb747e9825d1d1bb6b26046&#34;&gt;Dorling cartograms&lt;/a&gt; scaled by resident population, and regular hexagonal &lt;a href=&#34;https://github.com/jbaileyh/geogrid&#34;&gt;geogrids&lt;/a&gt;, I’ve attempted to minimise any misrepresentation. Take the example of Blackpool, which was &lt;a href=&#34;https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/835115/IoD2019_Statistical_Release.pdf&#34;&gt;ranked&lt;/a&gt; the most deprived local authority in England. Around 42% of neighbourhoods in Blackpool are in the top 10% most deprived in England (the “first decile”). Yet these neighbourhoods only make up around 29% of the city’s actual area.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/blackpool.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Using a Dorling cartogram scaled by resident population size, neighbourhoods in the first decile now take up 41% of the map’s area, and the larger, less deprived neighbourhoods (in light blue) have been shrunk accordingly to become less dominant. With a regular hexagonal geogrid, the map now mimics the underlying data, with neighbourhoods in the first decile of deprivation taking up 42% of the total area.&lt;/p&gt;
&lt;p&gt;The variation in the shapes and sizes of Blackpool’s neighbourhoods can no longer divert attention or mislead readers, and arguably, the underlying data has been conveyed more accurately than with the original map.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mapping-deprivation-differently&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Mapping deprivation differently&lt;/h2&gt;
&lt;p&gt;A striking difference can be seen using different types of maps to visualise deprivation in Burnley and Hartlepool, which were among England’s most deprived local authorities. Both areas are characterised by many small, densely populated neighbourhoods in the first decile (most deprived), surrounded by much larger and wealthier suburbs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/burn_hart.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;At first glance, deprivation appears understated in the map that uses the original boundaries. But with the Dorling cartogram (again scaled by population) and the hexagonal geogrids, the issue can be somewhat rectified. This comes with its own difficulties, though.&lt;/p&gt;
&lt;p&gt;The geogrid in particular pushed some neighbourhoods further apart and forced some closer together than they appear on the original map. This might prove problematic in cases where the primary aim of the map is to convey distinct geographic patterns, such as the clustering of highly deprived neighbourhoods. In making the transformation, these patterns might be lost, or spurious patterns generated.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;encouraging-experimentation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Encouraging experimentation&lt;/h2&gt;
&lt;p&gt;Birmingham and Manchester – ranked in the top ten most deprived local authorities – present a different challenge. With much larger populations, and many more neighbourhoods to visualise, the original map presents an overwhelming amount of information.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/birm_manc.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Once again, both the Dorling cartogram and the geogrid perform admirably, scaling down the visual impact of larger, wealthier areas (especially in the north of Birmingham) and making the maps easier to read – without skewing the geographic patterning of deprivation across each city.&lt;/p&gt;
&lt;p&gt;There are no firm rules about how best to create beautiful but accurate maps. In this case, using the latest neighbourhood deprivation data in England, mapping out the original boundaries can clearly introduce some degree of misrepresentation. There’s &lt;a href=&#34;https://osf.io/preprints/socarxiv/t6agd/&#34;&gt;real value&lt;/a&gt; in experimenting with different cartographic techniques – and media organisations and the government would do well to think outside the box when it comes to sharing the latest findings with the public.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>When crime drops, the demands on the police don’t necessarily fall</title>
      <link>/post/crimedrop_conversation/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      <guid>/post/crimedrop_conversation/</guid>
      <description>


&lt;p&gt;On a day-to-day basis, the exposure citizens have to the police is often fleeting, with officers passing by in a blur as they respond to emergency calls. Official crime figures can be disputed, but &lt;a href=&#34;https://www.gov.uk/government/uploads/system/uploads/attachment_data/file/445662/rec-crime-2003-2015.ods&#34;&gt;the long-term trend&lt;/a&gt; appears to be that levels of crime in England and Wales are heading downward. Yet it is a myth to think that an apparent drop in crime relieves some of the pressures placed on police forces.&lt;/p&gt;
&lt;p&gt;In reality, the demands placed on police forces do not originate primarily from obvious criminal behaviour. Forces are increasingly burdened with what’s called “latent” crime demand, such as child sexual exploitation or modern slavery, where victims are afraid or unwilling to approach police, as well as non-crime issues, such as missing persons.&lt;/p&gt;
&lt;p&gt;The volume of this demand, and the time spent on addressing it, is much more problematic to estimate, and yet the safety of the public depends on both the police and the government having a handle on such estimations.&lt;/p&gt;
&lt;p&gt;Out on the streets, police forces need to demonstrate an understanding of current and future demand to allocate resources efficiently and ensure calls are responded to in time. In Westminster, the funding allocations to the 43 forces of England and Wales are dictated by estimations of demand. In an era of austerity, measuring this demand has never been more crucial.&lt;/p&gt;
&lt;div id=&#34;measuring-demand&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Measuring demand&lt;/h2&gt;
&lt;p&gt;Reports by the &lt;a href=&#34;http://www.college.police.uk/News/College-news/Documents/Demand%20Report%2023_1_15_noBleed.pdf&#34;&gt;College of Policing&lt;/a&gt; and &lt;a href=&#34;http://www.justiceinspectorates.gov.uk/hmic/wp-content/uploads/state-of-policing-2016.pdf&#34;&gt;HM Inspectorate of Constabulary&lt;/a&gt; (HMIC), have shown how the realities of modern policing render traditional estimates of demand outdated and inaccurate.&lt;/p&gt;
&lt;p&gt;In its annual review of policing in England and Wales, HMIC rates how well each police force estimates the current and future demand for their services. For their latest report, published in &lt;a href=&#34;http://www.justiceinspectorates.gov.uk/hmic/wp-content/uploads/state-of-policing-2016.pdf&#34;&gt;March 2017&lt;/a&gt; and covering inspections between February 2016 and March 2017, the message is clear: most forces are doing a good job, but there is room for improvement.&lt;/p&gt;
&lt;p&gt;The map below, generated using open-source &lt;a href=&#34;http://geoportal.statistics.gov.uk/datasets/3e5a096a8c7c456fb6d3164a3f44b005_0&#34;&gt;spatial data&lt;/a&gt;, plots the latest force ratings. It paints a positive picture for England and Wales, but nine out of 43 police forces require improvement, and only a handful managed to achieve the top grade.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/map_police1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A key component of improving police awareness of their demand will be refining the understanding of “latent” and non-crime demand. Latent demand often involves vulnerable people who are unwilling to come forward due to the nature of the crime, or live in communities with a widespread distrust of the police. It is therefore extremely difficult to make reliable estimations about this kind of demand on police time.&lt;/p&gt;
&lt;p&gt;A substantial proportion of the demands placed on police forces originate from non-crime issues such as mental health. Although &lt;a href=&#34;https://www.publications.parliament.uk/pa/cm201516/cmselect/cmhaff/476/47608.htm&#34;&gt;estimates&lt;/a&gt; vary, some forces estimate that 70% to 80% of their demand is comprised of non-crime incidents. A number of forces &lt;a href=&#34;https://www.publications.parliament.uk/pa/cm201516/cmselect/cmhaff/476/47608.htm&#34;&gt;believe&lt;/a&gt; that the increase in non-criminal incidents being dealt with by the police may be partially driven by cuts to other areas of the public sector.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;money-depends-on-it&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Money depends on it&lt;/h2&gt;
&lt;p&gt;To ensure that police forces are allocated money appropriately, in the interests of public safety and economic efficiency, the government also needs to demonstrate an understanding of demand. The issue of police funding remains a highly charged one, and budget cuts were &lt;a href=&#34;https://theconversation.com/fact-check-have-the-conservatives-protected-police-and-counter-terrorism-budgets-78782&#34;&gt;keenly debated&lt;/a&gt; during the 2017 election campaign.&lt;/p&gt;
&lt;p&gt;The map here uses recent police funding &lt;a href=&#34;https://www.gov.uk/government/uploads/system/uploads/attachment_data/file/588196/Police_Grant_report_2017-18_Accessible.pdf&#34;&gt;figures&lt;/a&gt; from 2017-2018 to demonstrate the vast sums of public money involved, and how much these sums can vary between police force areas&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/map_police2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Despite the implications and public concern over police funding, refining the formula used to apportion money has been fraught with difficulties. A &lt;a href=&#34;https://www.publications.parliament.uk/pa/cm201516/cmselect/cmhaff/476/476.pdf&#34;&gt;December 2015 report&lt;/a&gt; by MPs on the Home Affairs Committee demonstrated the problems the government has faced when attempting to estimate demand for the purposes of funding allocations. It detailed how a freshly proposed police funding formula, which aimed to simplify the estimation process, was almost immediately put on hold following the realisation that incorrect data was being used for the calculation. Although &lt;a href=&#34;https://www.publications.parliament.uk/pa/cm201617/cmselect/cmhaff/1093/1093.pdf&#34;&gt;a new government consultation&lt;/a&gt; on a revised funding calculation was launched in September 2016, its outcome has not yet been announced.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-role-of-experts&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The role of experts&lt;/h2&gt;
&lt;p&gt;Academic researchers are often &lt;a href=&#34;http://blogs.lse.ac.uk/impactofsocialsciences/2015/04/09/academic-promotion-scholars-popular-media/&#34;&gt;justifiably scolded&lt;/a&gt; for not engaging with real-world discussions, and failing to offer practical solutions to contemporary problems in society. Yet here they clearly have something to offer.&lt;/p&gt;
&lt;p&gt;HMIC &lt;a href=&#34;http://www.justiceinspectorates.gov.uk/hmic/wp-content/uploads/state-of-policing-2016.pdf&#34;&gt;reported&lt;/a&gt; that some police forces have made significant improvements to their demand estimations by working with academic research institutions who can provide much needed methodological expertise. But such collaborations are not widespread. Only recently has there been an acceptance that a concerted collaborative effort, including academic experts, is required to improve the government’s demand-based funding formula. Hopefully in this way past errors by the Home Office can be rectified, and trust in the system restored.&lt;/p&gt;
&lt;p&gt;Recent history tells us that collaborations can be fruitful, and that there is the potential to drastically improve estimations of demand through such partnership. Academics, police forces and the government must bear the responsibility of instigating further change. The safety of the public may depend on it.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
